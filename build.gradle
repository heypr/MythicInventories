plugins {
    id 'java'
}

group = 'me.hyper'
version = '0.6.2-b' + buildNumber() + "-" + buildBranch()

static def buildNumber() {
    System.getenv("BUILD_NUMBER") ?: "UNKNOWN"
}

static def buildBranch() {
    System.getenv("BUILD_CLASS") ?: "DEV"
}

repositories {
    mavenCentral()
    maven {
        url = "https://mvn.lumine.io/repository/maven-public/"
    }
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
}

dependencies {
    compileOnly "io.papermc.paper:paper-api:1.20.6-R0.1-SNAPSHOT"
    compileOnly 'io.lumine:Mythic-Dist:5.6.2'
    implementation "net.kyori:adventure-text-minimessage:4.17.0"
    implementation "org.bstats:bstats-bukkit:3.0.2"
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

tasks.processResources {
    filesMatching("plugin.yml") {
        expand(BUILD_NUMBER: System.getenv("BUILD_NUMBER"))
    }
}
